SELECT rolname
FROM pg_catalog.pg_roles;

SELECT grantor, grantee, table_schema, table_name, privilege_type
FROM information_schema.table_privileges 
WHERE grantee = 'userB';


CREATE ROLE analyst WITH NOSUPERUSER LOGIN;
CREATE ROLE analyst_mgmt WITH NOSUPERUSER LOGIN CREATEROLE;
ALTER ROLE analyst_mgmt WITH CREATEDB;

SET ROLE analyst_mgmt;
CREATE ROLE wilson WITH LOGIN;
SELECT * FROM pg_catalog.pg_roles 
ORDER BY rolname;

SET ROLE analyst;

DELETE FROM marketing.prospects WHERE id = 2;

-- granting the user USAGE and the ability to CREATE
GRANT USAGE, CREATE ON SCHEMA marketing TO analyst;
-- granting the table specific permissions.
GRANT SELECT, INSERT, DELETE ON marketing.prospects TO analyst;
--revoke
REVOKE DELETE ON marketing.prospects FROM analyst;
--test
SET ROLE analyst;
DELETE FROM marketing.prospects WHERE id = 2;


--Modifying Default Permissions
GRANT SELECT, DELETE, UPDATE, INSERT on census.economic_survey to writer;
--Modify the DEFAULT PRIVILEGES so that SELECT, DELETE, UPDATE, and INSERT are granted to writer on newly created tables in the census schema.
ALTER DEFAULT PRIVILEGES IN SCHEMA census
GRANT SELECT, DELETE, UPDATE, INSERT ON TABLES TO writer;
--test, first create, then select
CREATE TABLE census.housing_survey (
    area_id int primary key, 
    median_rent int
);
SELECT
    grantee, 
    table_schema,
    table_name,
    privilege_type
FROM information_schema.table_privileges 
WHERE table_schema  = 'census'
AND grantee = 'writer';


--Modifying Default Permissions
GRANT SELECT, DELETE, UPDATE, INSERT on census.economic_survey to writer;
--Modify the DEFAULT PRIVILEGES so that SELECT, DELETE, UPDATE, and INSERT are granted to writer on newly created tables in the census schema.
ALTER DEFAULT PRIVILEGES IN SCHEMA census
GRANT SELECT, DELETE, UPDATE, INSERT ON TABLES TO writer;
--test, first create, then select
CREATE TABLE census.housing_survey (
    area_id int primary key, 
    median_rent int
);
SELECT
    grantee, 
    table_schema,
    table_name,
    privilege_type
FROM information_schema.table_privileges 
WHERE table_schema  = 'census'
AND grantee = 'writer';


-- There are several ways to create a new group role:
    -- Using CREATE ROLE and the WITH ROLE option when creating a role — this automatically adds the listed names to the role.
    -- Using CREATE ROLE and a GRANT statement — this grants all the permissions of the newly created role to the listed names.
        -- CREATE ROLE finance WITH NOLOGIN;
    -- You can also add users to group(s) on creation by specifying IN ROLE along with the CREATE ROLE statement. 
        -- CREATE ROLE fran WITH LOGIN IN ROLE employees, managers;
        -- GRANT finance TO charlie;

CREATE ROLE pgdba WITH SUPERUSER CREATEDB NOLOGIN;

CREATE ROLE david with LOGIN in ROLE employees, pgdba;

SELECT rolname, rolsuper
FROM pg_catalog.pg_roles 
WHERE rolname = 'david';

SET ROLE david;

SELECT * 
FROM cc_user.company_startdates;



--Column Level Security
GRANT SELECT ON projects to manager;
--or if specific:
-- GRANT SELECT (project_code, project_name, project_status) ON projects to employees;
GRANT UPDATE (project_name, project_status) ON projects to manager;

--confirm
SELECT *
FROM information_schema.column_privileges 
WHERE grantee = 'manager';


DELETE FROM accounts 
WHERE contract_amt < 10000;

SELECT * FROM accounts;



